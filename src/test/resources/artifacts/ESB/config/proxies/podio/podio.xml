<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
  ~
  ~   WSO2 Inc. licenses this file to you under the Apache License,
  ~   Version 2.0 (the "License"); you may not use this file except
  ~   in compliance with the License.
  ~   You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~  Unless required by applicable law or agreed to in writing,
  ~  software distributed under the License is distributed on an
  ~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~  KIND, either express or implied.  See the License for the
  ~  specific language governing permissions and limitations
  ~  under the License.
  -->
<proxy xmlns="http://ws.apache.org/ns/synapse"
       name="podio"
       transports="https,http"
       statistics="disable"
       trace="disable"
       startOnLoad="true">
   <target>
      <inSequence>
         <property name="apiUrl" expression="json-eval($.apiUrl)"/>
         <property name="accessToken" expression="json-eval($.accessToken)"/>
         <property name="fileId" expression="json-eval($.fileId)"/>
         <property name="refType" expression="json-eval($.refType)"/>
         <property name="refId" expression="json-eval($.refId)"/>
         <property name="silent" expression="json-eval($.silent)"/>
         <property name="taskId" expression="json-eval($.taskId)"/>
         <property name="hook" expression="json-eval($.hook)"/>
         <property name="grouping" expression="json-eval($.grouping)"/>
         <property name="app" expression="json-eval($.app)"/>
         <property name="completed" expression="json-eval($.completed)"/>
         <property name="completedBy" expression="json-eval($.completedBy)"/>
         <property name="completedOn" expression="json-eval($.completedOn)"/>
         <property name="createdBy" expression="json-eval($.createdBy)"/>
         <property name="createdOn" expression="json-eval($.createdOn)"/>
         <property name="createdVia" expression="json-eval($.createdVia)"/>
         <property name="dueDate" expression="json-eval($.dueDate)"/>
         <property name="externalId" expression="json-eval($.externalId)"/>
         <property name="files" expression="json-eval($.files)"/>
         <property name="label" expression="json-eval($.label)"/>
         <property name="limit" expression="json-eval($.limit)"/>
         <property name="offset" expression="json-eval($.offset)"/>
         <property name="org" expression="json-eval($.org)"/>
         <property name="reassigned" expression="json-eval($.reassigned)"/>
         <property name="reference" expression="json-eval($.reference)"/>
         <property name="responsible" expression="json-eval($.responsible)"/>
         <property name="sortBy" expression="json-eval($.sortBy)"/>
         <property name="sortDesc" expression="json-eval($.sortDesc)"/>
         <property name="space" expression="json-eval($.space)"/>
         <property name="view" expression="json-eval($.view)"/>
         <property name="text" expression="json-eval($.text)" />
         <property name="isHook" expression="json-eval($.isHook)" />
         <property name="isSilent" expression="json-eval($.isSilent)" />
         <property name="description" expression="json-eval($.description)" />
         <property name="isPrivate" expression="json-eval($.isPrivate)" />
         <property name="dueTime" expression="json-eval($.dueTime)" />
         <property name="dueOn" expression="json-eval($.dueOn)" />
         <property name="fileIds" expression="json-eval($.fileIds)" />
         <property name="labels" expression="json-eval($.labels)" />
         <property name="labelIds" expression="json-eval($.labelIds)" />
         <property name="remindDelta" expression="json-eval($.remindDelta)" />
         <property name="recurrenceName" expression="json-eval($.recurrenceName)" />
         <property name="recurrenceConfigDays" expression="json-eval($.recurrenceConfigDays)" />
         <property name="recurrenceRepeatOn" expression="json-eval($.recurrenceRepeatOn)" />
         <property name="recurrenceStep" expression="json-eval($.recurrenceStep)" />
         <property name="recurrenceUntil" expression="json-eval($.recurrenceUntil)" />
		 
		<filter xpath="get-property('transport', 'Action') = 'urn:uploadFile'">    
			<then>
				 <podio.uploadFile>
            <apiUrl>{$url:apiUrl}</apiUrl>
         </podio.uploadFile>
			</then>
			<else>	 
			 <podio.init>
            <apiUrl>{$ctx:apiUrl}</apiUrl>
            <accessToken>{$ctx:accessToken}</accessToken>
         </podio.init>
			</else>
		</filter>
		 
		 <switch source="get-property('transport', 'Action')">
         
		<case regex="urn:getFile">
         <podio.getFile>
            <fileId>{$ctx:fileId}</fileId>
         </podio.getFile>
		</case>
    <case regex="urn:attachFile">
         <podio.attachFile>
            <silent>{$ctx:silent}</silent>
            <fileId>{$ctx:fileId}</fileId>
            <refId>{$ctx:refId}</refId>
            <refType>{$ctx:refType}</refType>
         </podio.attachFile>
    </case>
    <case regex="urn:incompleteTask">
         <podio.incompleteTask>
            <silent>{$ctx:silent}</silent>
            <taskId>{$ctx:taskId}</taskId>
            <hook>{$ctx:hook}</hook>
         </podio.incompleteTask>
    </case>
    <case regex="urn:listTasks">
         <podio.listTasks>
            <limit>{$ctx:limit}</limit>
            <files>{$ctx:files}</files>
            <app>{$ctx:app}</app>
            <completedOn>{$ctx:completedOn}</completedOn>
            <responsible>{$ctx:responsible}</responsible>
            <label>{$ctx:label}</label>
            <space>{$ctx:space}</space>
            <org>{$ctx:org}</org>
            <externalId>{$ctx:externalId}</externalId>
            <reference>{$ctx:reference}</reference>
            <reassigned>{$ctx:reassigned}</reassigned>
            <createdOn>{$ctx:createdOn}</createdOn>
            <completedBy>{$ctx:completedBy}</completedBy>
            <sortBy>{$ctx:sortBy}</sortBy>
            <grouping>{$ctx:grouping}</grouping>
            <createdBy>{$ctx:createdBy}</createdBy>
            <sortDesc>{$ctx:sortDesc}</sortDesc>
            <createdVia>{$ctx:createdVia}</createdVia>
            <view>{$ctx:view}</view>
            <offset>{$ctx:offset}</offset>
            <dueDate>{$ctx:dueDate}</dueDate>
            <completed>{$ctx:completed}</completed>
         </podio.listTasks>
    </case>
    <case regex="urn:getReminder">
         <podio.getReminder>
            <refId>{$ctx:refId}</refId>
            <refType>{$ctx:refType}</refType>
         </podio.getReminder>
    </case>
    <case regex="urn:assignTask">
         <podio.assignTask>
            <silent>{$ctx:silent}</silent>
            <taskId>{$ctx:taskId}</taskId>
            <responsible>{$ctx:responsible}</responsible>
         </podio.assignTask>
    </case>
    <case regex="urn:completeTask">
         <podio.completeTask>
            <silent>{$ctx:silent}</silent>
            <taskId>{$ctx:taskId}</taskId>
            <hook>{$ctx:hook}</hook>
         </podio.completeTask>
    </case>
            <case regex="urn:createTask">
               <podio.createTask>
                  <isSilent>{$ctx:isSilent}</isSilent>
                  <remindDelta>{$ctx:remindDelta}</remindDelta>
                  <isHook>{$ctx:isHook}</isHook>
                  <text>{$ctx:text}</text>
                  <labelIds>{$ctx:labelIds}</labelIds>
                  <responsible>{$ctx:responsible}</responsible>
                  <labels>{$ctx:labels}</labels>
                  <externalId>{$ctx:externalId}</externalId>
                  <isPrivate>{$ctx:isPrivate}</isPrivate>
                  <dueTime>{$ctx:dueTime}</dueTime>
                  <fileIds>{$ctx:fileIds}</fileIds>
                  <recurrenceName>{$ctx:recurrenceName}</recurrenceName>
                  <recurrenceConfigDays>{$ctx:recurrenceConfigDays}
                  </recurrenceConfigDays>
                  <recurrenceRepeatOn>{$ctx:recurrenceRepeatOn}</recurrenceRepeatOn>
                  <recurrenceStep>{$ctx:recurrenceStep}</recurrenceStep>
                  <recurrenceUntil>{$ctx:recurrenceUntil}</recurrenceUntil>
                  <description>{$ctx:description}</description>
                  <dueOn>{$ctx:dueOn}</dueOn>
                  <dueDate>{$ctx:dueDate}</dueDate>
               </podio.createTask>
            </case>
            <case regex="urn:createReminder">
               <podio.createReminder>
                  <refId>{$ctx:refId}</refId>
                  <remindDelta>{$ctx:remindDelta}</remindDelta>
                  <refType>{$ctx:refType}</refType>
               </podio.createReminder>
            </case>
            <case regex="urn:updateTask">
               <podio.updateTask>
                  <taskId>{$ctx:taskId}</taskId>
                  <isSilent>{$ctx:isSilent}</isSilent>
                  <remindDelta>{$ctx:remindDelta}</remindDelta>
                  <isHook>{$ctx:isHook}</isHook>
                  <text>{$ctx:text}</text>
                  <labelIds>{$ctx:labelIds}</labelIds>
                  <responsible>{$ctx:responsible}</responsible>
                  <labels>{$ctx:labels}</labels>
                  <externalId>{$ctx:externalId}</externalId>
                  <isPrivate>{$ctx:isPrivate}</isPrivate>
                  <dueTime>{$ctx:dueTime}</dueTime>
                  <fileIds>{$ctx:fileIds}</fileIds>
                  <recurrenceName>{$ctx:recurrenceName}</recurrenceName>
                  <recurrenceConfigDays>{$ctx:recurrenceConfigDays}</recurrenceConfigDays>
                  <recurrenceRepeatOn>{$ctx:recurrenceRepeatOn}</recurrenceRepeatOn>
                  <recurrenceStep>{$ctx:recurrenceStep}</recurrenceStep>
                  <recurrenceUntil>{$ctx:recurrenceUntil}</recurrenceUntil>
                  <description>{$ctx:description}</description>
                  <dueOn>{$ctx:dueOn}</dueOn>
                  <dueDate>{$ctx:dueDate}</dueDate>
               </podio.updateTask>
            </case>
            <case regex="urn:getTask">
               <podio.getTask>
                  <taskId>{$ctx:taskId}</taskId>
               </podio.getTask>
            </case>
		 </switch>
         <respond/>
      </inSequence>
      <outSequence>
         <log/>
         <send/>
      </outSequence>
   </target>
   <description/>
</proxy>
                                